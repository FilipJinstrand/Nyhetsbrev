{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\filip\\\\OneDrive\\\\SKOLA\\\\Webbutveckling\\\\react-test\\\\test-app\\\\src\\\\SubscribeBtn.js\";\nimport React, { Component } from 'react';\nexport class SubscribeBtn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      fetch('http://localhost:4000/users').then(response => response.json()).then(data => {\n        console.log(data);\n        console.log(localStorage.getItem(\"userId\"));\n        var person = data.find(x => x.id.toString() === localStorage.getItem(\"userId\"));\n        this.setState({\n          subscribed: person.subscribed\n        });\n      });\n    };\n\n    this.updateUser = e => {\n      e.preventDefault();\n      var id = this.props.personId;\n      const data = {\n        subscribed: !this.state.subscribed\n      };\n      fetch(`http://localhost:4000/users/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(response => response.json()).then(data => {\n        console.log('Success:', data);\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n      this.setState({\n        subscribed: this.state.subscribed\n      });\n    };\n\n    this.checkIfSubbed = () => {\n      if (this.state.subscribed === false) {\n        return /*#__PURE__*/React.createElement(\"button\", {\n          onClick: this.updateUser,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }\n        }, \"Subscribe\");\n      } else if (this.state.subscribed === true) {\n        return /*#__PURE__*/React.createElement(\"button\", {\n          onClick: this.updateUser,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }\n        }, \"Unsubscribe\");\n      } else {\n        console.log(\"sub is null\");\n      }\n    };\n\n    this.state = {\n      subscribed: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, this.checkIfSubbed());\n  }\n\n}\nexport default SubscribeBtn;","map":{"version":3,"sources":["C:/Users/filip/OneDrive/SKOLA/Webbutveckling/react-test/test-app/src/SubscribeBtn.js"],"names":["React","Component","SubscribeBtn","constructor","props","componentDidMount","fetch","then","response","json","data","console","log","localStorage","getItem","person","find","x","id","toString","setState","subscribed","updateUser","e","preventDefault","personId","state","method","headers","body","JSON","stringify","catch","error","checkIfSubbed","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,MAAMC,YAAN,SAA2BD,SAA3B,CAAqC;AACxCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAKnBC,iBALmB,GAKC,MAAM;AACtBC,MAAAA,KAAK,CAAC,6BAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEWG,IAAD,IAAU;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAZ;AACA,YAAIC,MAAM,GAAGL,IAAI,CAACM,IAAL,CAAUC,CAAC,IAAIA,CAAC,CAACC,EAAF,CAAKC,QAAL,OAAoBN,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAnC,CAAb;AACA,aAAKM,QAAL,CAAc;AAAEC,UAAAA,UAAU,EAAEN,MAAM,CAACM;AAArB,SAAd;AACH,OAPL;AAQH,KAdkB;;AAAA,SAgBnBC,UAhBmB,GAgBLC,CAAD,IAAO;AAChBA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAIN,EAAE,GAAG,KAAKd,KAAL,CAAWqB,QAApB;AAEA,YAAMf,IAAI,GAAG;AAAEW,QAAAA,UAAU,EAAE,CAAC,KAAKK,KAAL,CAAWL;AAA1B,OAAb;AAEAf,MAAAA,KAAK,CAAE,+BAA8BY,EAAG,EAAnC,EAAsC;AACvCS,QAAAA,MAAM,EAAE,KAD+B;AAEvCC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAF8B;AAKvCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAerB,IAAf;AALiC,OAAtC,CAAL,CAOKH,IAPL,CAOUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPtB,EAQKF,IARL,CAQUG,IAAI,IAAI;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,IAAxB;AACH,OAVL,EAWKsB,KAXL,CAWYC,KAAD,IAAW;AACdtB,QAAAA,OAAO,CAACsB,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AACH,OAbL;AAeA,WAAKb,QAAL,CAAc;AAAEC,QAAAA,UAAU,EAAE,KAAKK,KAAL,CAAWL;AAAzB,OAAd;AACH,KAtCkB;;AAAA,SAwCnBa,aAxCmB,GAwCH,MAAM;AAElB,UAAI,KAAKR,KAAL,CAAWL,UAAX,KAA0B,KAA9B,EAAqC;AACjC,4BAAQ;AAAQ,UAAA,OAAO,EAAE,KAAKC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAR;AACH,OAFD,MAGK,IAAI,KAAKI,KAAL,CAAWL,UAAX,KAA0B,IAA9B,EAAoC;AACrC,4BAAQ;AAAQ,UAAA,OAAO,EAAE,KAAKC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAR;AACH,OAFI,MAGA;AACDX,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH;AACJ,KAnDkB;;AAEf,SAAKc,KAAL,GAAa;AAAEL,MAAAA,UAAU,EAAE;AAAd,KAAb;AACH;;AAiDDc,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKD,aAAL,EADL,CADJ;AAKH;;AA3DuC;AA8D5C,eAAehC,YAAf","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class SubscribeBtn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { subscribed: '' }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        fetch('http://localhost:4000/users')\r\n            .then(response => response.json())\r\n            .then((data) => {\r\n                console.log(data);\r\n                console.log(localStorage.getItem(\"userId\"));\r\n                var person = data.find(x => x.id.toString() === localStorage.getItem(\"userId\"));\r\n                this.setState({ subscribed: person.subscribed })\r\n            });\r\n    }\r\n\r\n    updateUser = (e) => {\r\n        e.preventDefault();\r\n        var id = this.props.personId;\r\n\r\n        const data = { subscribed: !this.state.subscribed };\r\n\r\n        fetch(`http://localhost:4000/users/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log('Success:', data);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n            });\r\n\r\n        this.setState({ subscribed: this.state.subscribed })\r\n    }\r\n\r\n    checkIfSubbed = () => {\r\n\r\n        if (this.state.subscribed === false) {\r\n            return (<button onClick={this.updateUser}>Subscribe</button>)\r\n        }\r\n        else if (this.state.subscribed === true) {\r\n            return (<button onClick={this.updateUser}>Unsubscribe</button>)\r\n        }\r\n        else {\r\n            console.log(\"sub is null\")\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.checkIfSubbed()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SubscribeBtn\r\n"]},"metadata":{},"sourceType":"module"}