{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\filip\\\\OneDrive\\\\SKOLA\\\\Webbutveckling\\\\react-test\\\\test-app\\\\src\\\\SubscribeBtn.js\";\nimport React, { Component } from 'react';\nexport class SubscribeBtn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.setState({\n        subscribed: this.props.subbed\n      });\n      console.log(this.state.subscribed);\n    };\n\n    this.updateUser = e => {\n      e.preventDefault();\n      var id = this.props.personId;\n      const data = {\n        subscribed: this.state.subscribed\n      };\n      fetch(`http://localhost:4000/users/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(response => response.json()).then(data => {\n        console.log('Success:', data);\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n      this.setState({\n        subscribed: !this.state.subscribed\n      });\n    };\n\n    this.checkIfSubbed = () => {\n      if (this.state.subscribed) {\n        return /*#__PURE__*/React.createElement(\"button\", {\n          onClick: this.updateUser,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }\n        }, \"Subscribe\");\n      } else if (!this.state.subscribed) {\n        return /*#__PURE__*/React.createElement(\"button\", {\n          onClick: this.updateUser,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }\n        }, \"Unsubscribe\");\n      } else {\n        console.error(\"sub is null\");\n      }\n    };\n\n    this.state = {\n      subscribed: this.props.subbed\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, this.checkIfSubbed());\n  }\n\n}\nexport default SubscribeBtn;","map":{"version":3,"sources":["C:/Users/filip/OneDrive/SKOLA/Webbutveckling/react-test/test-app/src/SubscribeBtn.js"],"names":["React","Component","SubscribeBtn","constructor","props","componentDidMount","setState","subscribed","subbed","console","log","state","updateUser","e","preventDefault","id","personId","data","fetch","method","headers","body","JSON","stringify","then","response","json","catch","error","checkIfSubbed","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,MAAMC,YAAN,SAA2BD,SAA3B,CAAqC;AACxCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAKnBC,iBALmB,GAKC,MAAM;AACtB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,UAAU,EAAE,KAAKH,KAAL,CAAWI;AAAzB,OAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWJ,UAAvB;AACH,KARkB;;AAAA,SAUnBK,UAVmB,GAULC,CAAD,IAAO;AAChBA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAIC,EAAE,GAAG,KAAKX,KAAL,CAAWY,QAApB;AAEA,YAAMC,IAAI,GAAG;AAAEV,QAAAA,UAAU,EAAE,KAAKI,KAAL,CAAWJ;AAAzB,OAAb;AAEAW,MAAAA,KAAK,CAAE,+BAA8BH,EAAG,EAAnC,EAAsC;AACvCI,QAAAA,MAAM,EAAE,KAD+B;AAEvCC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAF8B;AAKvCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;AALiC,OAAtC,CAAL,CAOKO,IAPL,CAOUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPtB,EAQKF,IARL,CAQUP,IAAI,IAAI;AACVR,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBO,IAAxB;AACH,OAVL,EAWKU,KAXL,CAWYC,KAAD,IAAW;AACdnB,QAAAA,OAAO,CAACmB,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AACH,OAbL;AAeA,WAAKtB,QAAL,CAAc;AAAEC,QAAAA,UAAU,EAAE,CAAC,KAAKI,KAAL,CAAWJ;AAA1B,OAAd;AACH,KAhCkB;;AAAA,SAkCnBsB,aAlCmB,GAkCH,MAAM;AAClB,UAAI,KAAKlB,KAAL,CAAWJ,UAAf,EAA2B;AACvB,4BAAQ;AAAQ,UAAA,OAAO,EAAE,KAAKK,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAR;AACH,OAFD,MAGK,IAAI,CAAC,KAAKD,KAAL,CAAWJ,UAAhB,EAA4B;AAC7B,4BAAQ;AAAQ,UAAA,OAAO,EAAE,KAAKK,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAR;AACH,OAFI,MAGA;AACDH,QAAAA,OAAO,CAACmB,KAAR,CAAc,aAAd;AACH;AACJ,KA5CkB;;AAEf,SAAKjB,KAAL,GAAa;AAAEJ,MAAAA,UAAU,EAAE,KAAKH,KAAL,CAAWI;AAAzB,KAAb;AACH;;AA0CDsB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKD,aAAL,EADL,CADJ;AAKH;;AApDuC;AAuD5C,eAAe3B,YAAf","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class SubscribeBtn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { subscribed: this.props.subbed }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setState({ subscribed: this.props.subbed })\r\n        console.log(this.state.subscribed)\r\n    }\r\n\r\n    updateUser = (e) => {\r\n        e.preventDefault();\r\n        var id = this.props.personId;\r\n\r\n        const data = { subscribed: this.state.subscribed };\r\n\r\n        fetch(`http://localhost:4000/users/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log('Success:', data);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n            });\r\n\r\n        this.setState({ subscribed: !this.state.subscribed })\r\n    }\r\n\r\n    checkIfSubbed = () => {\r\n        if (this.state.subscribed) {\r\n            return (<button onClick={this.updateUser}>Subscribe</button>)\r\n        }\r\n        else if (!this.state.subscribed) {\r\n            return (<button onClick={this.updateUser}>Unsubscribe</button>)\r\n        }\r\n        else {\r\n            console.error(\"sub is null\")\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.checkIfSubbed()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SubscribeBtn\r\n"]},"metadata":{},"sourceType":"module"}